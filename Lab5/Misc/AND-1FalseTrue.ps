%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Oct  9 03:41:17 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGACCGUGAUGAGCUUGGUUUAGUAUUUUACAGCUCCAUACAUGAGxxxxxxxxxxxxxxxxAGUUCGAUCAGGCGAAACGGUGAAAGCCGUAGGUUGCCCAGAGACAAU\
) } def
/len { sequence length } bind def

/coor [
[106.71029663 237.78024292]
[103.02801514 223.23924255]
[99.34573364 208.69824219]
[95.66345215 194.15724182]
[91.98117065 179.61622620]
[88.29888153 165.07522583]
[84.61660004 150.53422546]
[80.93431854 135.99322510]
[68.60765076 127.44609833]
[53.69869232 129.09622192]
[38.78973389 130.74633789]
[28.92266846 142.79951477]
[13.77935600 144.26058960]
[2.34931231 134.77957153]
[-12.55964756 136.42968750]
[-27.46860886 138.07981873]
[-42.37756729 139.72993469]
[-57.28652954 141.38006592]
[-65.60556793 145.48432922]
[-72.62824249 142.86441040]
[-77.61251831 157.25457764]
[-88.02362823 168.36892700]
[-102.05778503 174.28182983]
[-117.28348541 173.96882629]
[-131.06278992 167.48416138]
[-141.00833130 155.95135498]
[-145.39700317 141.36849976]
[-143.46844482 126.26219177]
[-135.55677795 113.24968719]
[-123.03275299 104.58546448]
[-108.06623077 101.77067566]
[-93.25025177 105.29297638]
[-81.15177155 114.54212952]
[-73.86693573 127.91564941]
[-58.93665314 126.47109985]
[-44.02769089 124.82097626]
[-29.11873055 123.17085266]
[-14.20977116 121.52072906]
[0.69918907 119.87060547]
[9.77926540 108.11952972]
[24.87556458 106.23368835]
[37.13961029 115.83738708]
[52.04856873 114.18726349]
[66.95752716 112.53713989]
[53.08257675 106.83752441]
[38.09767914 106.16454315]
[23.64941978 102.13368988]
[10.48033333 94.95210266]
[-0.73278689 84.98887634]
[-9.41366768 72.75603485]
[-15.11617470 58.88227081]
[-17.54724121 44.08058548]
[-16.58192635 29.11167717]
[-12.26984406 14.74484253]
[-4.83260059 1.71843076]
[5.34758282 -9.29809666]
[17.74751854 -17.73856926]
[31.72994232 -23.16920853]
[46.57625580 -25.31092072]
[61.52347183 -24.05363655]
[75.80340576 -19.46196938]
[88.68218231 -11.77190113]
[99.49791718 -1.37864196]
[107.69477081 11.18366909]
[112.85147095 25.26942062]
[114.70301819 40.15470886]
[113.15531158 55.06966400]
[106.43535614 68.48018646]
[118.76202393 59.93306732]
[131.08868408 51.38594437]
[143.41535950 42.83882523]
[145.98422241 27.24470711]
[158.87590027 18.10248566]
[174.44198608 20.83607864]
[183.44738770 33.82369232]
[180.54937744 49.36000824]
[167.46728516 58.22760391]
[151.96247864 55.16548920]
[139.63580322 63.71261215]
[127.30914307 72.25973511]
[114.98247528 80.80685425]
[118.26268768 95.44380188]
[133.05810547 97.91271973]
[147.85353088 100.38163757]
[162.64895630 102.85055542]
[177.44436646 105.31947327]
[192.60426331 99.06571960]
[205.43333435 109.28076172]
[202.73411560 125.45624542]
[187.28335571 130.95222473]
[174.97544861 120.11489105]
[160.18002319 117.64597321]
[145.38461304 115.17705536]
[130.58918762 112.70813751]
[115.79376984 110.23921967]
[110.71415710 115.75714874]
[95.47532654 132.31094360]
[99.15760803 146.85194397]
[102.83988953 161.39294434]
[106.52217102 175.93394470]
[110.20445251 190.47494507]
[113.88673401 205.01596069]
[117.56901550 219.55696106]
[121.25129700 234.09796143]
[136.05230713 238.19990540]
[146.80792236 249.16403198]
[150.62495422 264.04104614]
[146.47665405 278.82913208]
[135.47885132 289.55032349]
[120.58994293 293.32070923]
[105.81494904 289.12606812]
[95.12827301 278.09472656]
[91.40457153 263.19406128]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 104]
[2 103]
[3 102]
[4 101]
[5 100]
[6 99]
[7 98]
[8 97]
[9 44]
[10 43]
[11 42]
[14 39]
[15 38]
[16 37]
[17 36]
[18 35]
[20 34]
[68 81]
[69 80]
[70 79]
[71 78]
[82 95]
[83 94]
[84 93]
[85 92]
[86 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
