%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Oct  9 10:14:28 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGACCGUGAUGAGCUUGGUUUAGUAUUUUACAGCUCCAUACAUGAGGUGUUAUCCCUAUGCAAGUUCGAUCAGGCGAAACGGUGAAAGCCGUAGGUUGCCCAGAGACAAU\
) } def
/len { sequence length } bind def

/coor [
[124.57863617 227.61053467]
[120.89635468 213.06953430]
[117.21407318 198.52853394]
[113.53179169 183.98753357]
[109.84950256 169.44651794]
[106.16722107 154.90551758]
[102.48493958 140.36451721]
[98.80265808 125.82350922]
[77.61215210 112.92562866]
[77.03751373 88.12516785]
[66.28577423 77.66571808]
[55.53403473 67.20626831]
[44.78229904 56.74681473]
[33.88746643 46.43649673]
[22.85160637 36.27727509]
[11.81574821 26.11805153]
[0.77989000 15.95882797]
[-10.25596905 5.79960394]
[-21.29182816 -4.35961962]
[-32.32768631 -14.51884270]
[-45.71585464 -12.41982365]
[-57.67417908 -18.36864471]
[-63.89167404 -29.96822548]
[-62.27376938 -42.83227539]
[-73.02550507 -53.29172897]
[-83.77724457 -63.75118256]
[-96.92836761 -58.37911987]
[-111.09071350 -58.45115662]
[-124.10631561 -63.92301178]
[-134.00469971 -73.93015289]
[-139.30114746 -86.92422485]
[-139.21943665 -100.91253662]
[-133.80528259 -113.76367950]
[-144.26472473 -124.51541138]
[-154.72418213 -135.26715088]
[-169.89295959 -139.76367188]
[-173.22167969 -154.28155518]
[-183.68113708 -165.03329468]
[-194.14059448 -175.78503418]
[-209.72163391 -174.45652771]
[-222.48153687 -183.49638367]
[-226.39546204 -198.63623047]
[-219.61537170 -212.72752380]
[-205.34262085 -219.11676025]
[-190.31636047 -214.78715515]
[-181.63153076 -201.78302002]
[-183.38885498 -186.24449158]
[-172.92939758 -175.49275208]
[-162.46994019 -164.74101257]
[-148.04930115 -161.01351929]
[-143.97244263 -145.72660828]
[-133.51300049 -134.97486877]
[-123.05354309 -124.22312927]
[-108.06567383 -129.57812500]
[-92.18170929 -127.88758087]
[-78.55828857 -119.43692017]
[-69.92475891 -105.85998535]
[-68.03639984 -89.82341003]
[-73.31779480 -74.50292206]
[-62.56605530 -64.04346466]
[-51.81431961 -53.58401489]
[-35.08836365 -54.57155228]
[-22.53098869 -42.97783279]
[-22.16846275 -25.55470085]
[-11.13260365 -15.39547825]
[-0.09674510 -5.23625469]
[10.93911362 4.92296886]
[21.97497177 15.08219242]
[33.01082993 25.24141693]
[44.04668808 35.40063858]
[51.19775009 37.64657211]
[55.24174881 45.99507904]
[65.99348450 56.45452881]
[76.74522400 66.91397858]
[87.49696350 77.37343597]
[94.18868256 74.81039429]
[101.32691956 74.18282318]
[108.36320496 75.53892517]
[114.75689697 78.77450562]
[120.01673126 83.64096832]
[123.73857117 89.76438141]
[125.63643646 96.67426300]
[140.43185425 99.14318085]
[155.22727966 101.61209869]
[170.02268982 104.08101654]
[184.81811523 106.54993439]
[199.97801208 100.29618073]
[212.80708313 110.51122284]
[210.10786438 126.68670654]
[194.65710449 132.18267822]
[182.34919739 121.34535217]
[167.55377197 118.87643433]
[152.75836182 116.40751648]
[137.96293640 113.93859863]
[123.16751862 111.46968079]
[119.01938629 117.50858307]
[113.34366608 122.14122772]
[117.02594757 136.68223572]
[120.70822906 151.22323608]
[124.39051056 165.76423645]
[128.07279968 180.30525208]
[131.75508118 194.84625244]
[135.43736267 209.38725281]
[139.11964417 223.92825317]
[153.92063904 228.03019714]
[164.67626953 238.99432373]
[168.49330139 253.87135315]
[164.34498596 268.65942383]
[153.34719849 279.38061523]
[138.45828247 283.15100098]
[123.68328857 278.95635986]
[112.99660492 267.92501831]
[109.27291107 253.02436829]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 104]
[2 103]
[3 102]
[4 101]
[5 100]
[6 99]
[7 98]
[8 97]
[10 75]
[11 74]
[12 73]
[13 72]
[14 70]
[15 69]
[16 68]
[17 67]
[18 66]
[19 65]
[20 64]
[24 61]
[25 60]
[26 59]
[33 53]
[34 52]
[35 51]
[37 49]
[38 48]
[39 47]
[82 95]
[83 94]
[84 93]
[85 92]
[86 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
