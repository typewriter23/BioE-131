%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Oct  9 10:14:28 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGACCGUGAUGAGCUUGGUUUAGUAUUxxxxxxxxxxxxxxxxGAGxxxxxxxxxxxxxxxxAGUUCGAUCAGGCGAAACGGUGAAAGCCGUAGGUUGCCCAGAGACAAU\
) } def
/len { sequence length } bind def

/coor [
[127.93577576 240.86756897]
[124.25348663 226.32656860]
[120.57120514 211.78556824]
[116.88892365 197.24456787]
[113.20664215 182.70355225]
[109.52436066 168.16255188]
[105.84207916 153.62155151]
[102.15979767 139.08055115]
[90.26366425 137.90986633]
[79.27566528 133.20324707]
[70.22065735 125.39969635]
[63.94323730 115.22706604]
[61.02890396 103.63417816]
[61.74948120 91.70232391]
[66.03775787 80.54441071]
[73.49376678 71.20115662]
[65.63867188 58.42236710]
[57.78358078 45.64357376]
[49.92848587 32.86478424]
[42.07339096 20.08599281]
[34.21829987 7.30720139]
[26.36320496 -5.47159004]
[18.50811195 -18.25038147]
[4.81119013 -12.08412743]
[-9.56181812 -7.72007465]
[-24.37489510 -5.22988415]
[-39.38479996 -4.65444756]
[-54.34505081 -6.00321388]
[-69.00999451 -9.25403500]
[-83.13880920 -14.35352898]
[-96.49949646 -21.21795845]
[-108.87265778 -29.73460197]
[-120.05511475 -39.76361084]
[-129.86323547 -51.14029694]
[-138.13597107 -63.67784882]
[-144.73747253 -77.17037964]
[-149.55934143 -91.39633942]
[-152.52238464 -106.12212372]
[-153.57797241 -121.10591888]
[-152.70874023 -136.10168457]
[-149.92897034 -150.86315918]
[-145.28431702 -165.14796448]
[-138.85105896 -178.72151184]
[-130.73481750 -191.36093140]
[-121.06887054 -202.85865784]
[-110.01194763 -213.02590942]
[-97.74561310 -221.69570923]
[-84.47129059 -228.72569275]
[-70.40695953 -234.00042725]
[-55.78356171 -237.43328857]
[-40.84123230 -238.96792603]
[-25.82533455 -238.57913208]
[-10.98244572 -236.27326965]
[3.44370151 -232.08822632]
[17.21621704 -226.09271240]
[30.10894394 -218.38519287]
[41.91017151 -209.09220886]
[52.42610931 -198.36639404]
[61.48408508 -186.38383484]
[68.93534851 -173.34133911]
[74.65754700 -159.45303345]
[78.55672455 -144.94702148]
[80.56884003 -130.06146240]
[80.66085815 -115.04080963]
[78.83127594 -100.13172150]
[75.11012268 -85.57901764]
[69.55850983 -71.62165070]
[62.26760483 -58.48883057]
[53.35712051 -46.39620209]
[42.97338486 -35.54234314]
[31.28690338 -26.10547447]
[39.14199448 -13.32668400]
[46.99708939 -0.54789245]
[54.85218430 12.23089886]
[62.70727921 25.00968933]
[70.56237030 37.78848267]
[78.41746521 50.56727219]
[86.27256012 63.34606171]
[104.57183838 61.12774658]
[121.85709381 67.53122711]
[134.29447937 81.13622284]
[139.12542725 98.92517090]
[153.92083740 101.39408875]
[168.71626282 103.86301422]
[183.51167297 106.33193207]
[198.30709839 108.80084991]
[213.46699524 102.54708862]
[226.29606628 112.76213074]
[223.59684753 128.93762207]
[208.14608765 134.43359375]
[195.83818054 123.59626770]
[181.04275513 121.12734985]
[166.24734497 118.65843201]
[151.45191956 116.18951416]
[136.65649414 113.72059631]
[128.79637146 126.50892639]
[116.70079803 135.39826965]
[120.38307953 149.93927002]
[124.06536102 164.48027039]
[127.74765015 179.02127075]
[131.42993164 193.56228638]
[135.11221313 208.10328674]
[138.79449463 222.64428711]
[142.47677612 237.18528748]
[157.27777100 241.28723145]
[168.03340149 252.25135803]
[171.85043335 267.12838745]
[167.70211792 281.91644287]
[156.70433044 292.63766479]
[141.81541443 296.40805054]
[127.04042053 292.21340942]
[116.35374451 281.18206787]
[112.63005066 266.28140259]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 104]
[2 103]
[3 102]
[4 101]
[5 100]
[6 99]
[7 98]
[8 97]
[16 78]
[17 77]
[18 76]
[19 75]
[20 74]
[21 73]
[22 72]
[23 71]
[82 95]
[83 94]
[84 93]
[85 92]
[86 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
